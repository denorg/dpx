name: Deno CI
on:
  push:
    branches:
      - master
jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
    env:
      GH_ACTIONS: true
      DENO_BUILD_MODE: release
      V8_BINARY: true
    steps:
      - uses: actions/checkout@v2
      - name: Setup Deno
        uses: denolib/setup-deno@master
        with:
          deno-version: 1.x
      - name: Tests
        run: deno test --allow-run --allow-net
  release:
    name: Release
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12.17.0
      - name: Setup package.json
        run: echo '{"name":"@denorg/dpx","version":"0.0.0","publishConfig":{"access":"public"},"scripts":{"semantic-release":"semantic-release"},"repository":{"type":"git","url":"https://github.com/denorg/dpx.git"},"author":"Denorg <hi@den.org.in>","license":"MIT","bugs":{"url":"https://github.com/denorg/dpx/issues"},"homepage":"https://denorg.github.io/dpx/","devDependencies":{"semantic-release":"^17.0.4","semantic-release-gitmoji":"^1.3.3"}}' > package.json
      - name: Install dependencies
        run: npm install
      - name: Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
